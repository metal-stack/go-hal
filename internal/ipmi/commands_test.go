package ipmi

import (
	"github.com/stretchr/testify/require"
	"testing"
)

func TestSpecCommands(t *testing.T) {
	require.Equal(t, uint8(0x01), GetDeviceID)
	require.Equal(t, uint8(0x02), ColdReset)
	require.Equal(t, uint8(0x03), WarmReset)
	require.Equal(t, uint8(0x04), GetSelfTestResults)
	require.Equal(t, uint8(0x05), ManufacturingTestOn)
	require.Equal(t, uint8(0x06), SetACPIPowerState)
	require.Equal(t, uint8(0x07), GetACPIPowerState)
	require.Equal(t, uint8(0x08), GetDeviceGUID)
	require.Equal(t, uint8(0x09), GetNetFnSupport)
	require.Equal(t, uint8(0x0A), GetCommandSupport)
	require.Equal(t, uint8(0x0B), GetCommandSubFunctionSupport)
	require.Equal(t, uint8(0x0C), GetConfigurableCommands)
	require.Equal(t, uint8(0x0D), GetConfigurableCommandSubFunctions)

	require.Equal(t, uint8(0x60), SetCommandEnables)
	require.Equal(t, uint8(0x61), GetCommandEnables)
	require.Equal(t, uint8(0x62), SetCommandSubFunctionEnables)
	require.Equal(t, uint8(0x63), GetCommandSubFunctionEnables)
	require.Equal(t, uint8(0x64), GetOEMNetNnIANASupport)

	require.Equal(t, uint8(0x22), ResetWatchdogTimer)
	require.Equal(t, uint8(0x24), SetWatchdogTimer)
	require.Equal(t, uint8(0x25), GetWatchdogTimer)

	require.Equal(t, uint8(0x2E), SetBMCGlobalEnables)
	require.Equal(t, uint8(0x2F), GetBMCGlobalEnables)
	require.Equal(t, uint8(0x30), ClearMessageFlags)
	require.Equal(t, uint8(0x31), GetMessageFlags)
	require.Equal(t, uint8(0x32), EnableMessageChannelReceive)
	require.Equal(t, uint8(0x33), GetMessage)
	require.Equal(t, uint8(0x34), SendMessage)
	require.Equal(t, uint8(0x35), ReadEventMessageBuffer)
	require.Equal(t, uint8(0x36), GetBTInterfaceCapabilities)
	require.Equal(t, uint8(0x37), GetSystemGUID)
	require.Equal(t, uint8(0x38), GetChannelAuthenticationCapabilities)
	require.Equal(t, uint8(0x39), GetSessionChallenge)
	require.Equal(t, uint8(0x3A), ActivateSession)
	require.Equal(t, uint8(0x3B), SetSessionPrivilegeLevel)
	require.Equal(t, uint8(0x3C), CloseSession)
	require.Equal(t, uint8(0x3D), GetSessionInfo)
	require.Equal(t, uint8(0x3F), GetAuthCode)
	require.Equal(t, uint8(0x40), SetChannelAccess)
	require.Equal(t, uint8(0x41), GetChannelAccess)
	require.Equal(t, uint8(0x42), GetChannelInfo)
	require.Equal(t, uint8(0x43), SetUserAccess)
	require.Equal(t, uint8(0x44), GetUserAccess)
	require.Equal(t, uint8(0x45), SetUserName)
	require.Equal(t, uint8(0x46), GetUserName)
	require.Equal(t, uint8(0x47), SetUserPassword)
	require.Equal(t, uint8(0x48), ActivatePayload)
	require.Equal(t, uint8(0x49), DeactivatePayload)
	require.Equal(t, uint8(0x4A), GetPayloadActivationStatus)
	require.Equal(t, uint8(0x4B), GetPayloadInstanceInfo)
	require.Equal(t, uint8(0x4C), SetUserPayloadAccess)
	require.Equal(t, uint8(0x4D), GetUserPayloadAccess)
	require.Equal(t, uint8(0x4E), GetChannelPayloadSupport)
	require.Equal(t, uint8(0x4F), GetChannelPayloadVersion)
	require.Equal(t, uint8(0x50), GetChannelOEMPayloadInfo)
	require.Equal(t, uint8(0x52), MasterReadWrite)
	require.Equal(t, uint8(0x54), GetChannelCipherSuites)
	require.Equal(t, uint8(0x55), SuspendResumePayloadEncryption)
	require.Equal(t, uint8(0x56), SetChannelSecurityKeys)
	require.Equal(t, uint8(0x57), GetSystemInterfaceCapabilities)
	require.Equal(t, uint8(0x58), SetSystemInfoParameters)
	require.Equal(t, uint8(0x59), GetSystemInfoParameters)

	require.Equal(t, uint8(0x00), GetChassisCapabilities)
	require.Equal(t, uint8(0x01), GetChassisStatus)
	require.Equal(t, uint8(0x02), ChassisControl)
	require.Equal(t, uint8(0x03), ChassisReset)
	require.Equal(t, uint8(0x04), ChassisIdentify)
	require.Equal(t, uint8(0x05), SetChassisCapabilities)
	require.Equal(t, uint8(0x06), SetPowerRestorePolicy)
	require.Equal(t, uint8(0x07), GetSystemRestartCause)
	require.Equal(t, uint8(0x08), SetSystemBootOptions)
	require.Equal(t, uint8(0x09), GetSystemBootOptions)
	require.Equal(t, uint8(0x0A), SetFrontPanelButtonEnables)
	require.Equal(t, uint8(0x0B), SetPowerCycleInterval)
	require.Equal(t, uint8(0x0F), GetPOHCounter)

	require.Equal(t, uint8(0x00), SetEventReceiver)
	require.Equal(t, uint8(0x01), GetEventReceiver)
	require.Equal(t, uint8(0x02), PlatformEvent)
	require.Equal(t, uint8(0x30), GetEventCount)
	require.Equal(t, uint8(0x31), SetEventDestination)
	require.Equal(t, uint8(0x32), SetEventReceptionState)
	require.Equal(t, uint8(0x33), SendICMBEventMessage)
	require.Equal(t, uint8(0x34), GetEventDestination)
	require.Equal(t, uint8(0x35), GetEventReceptionState)

	require.Equal(t, uint8(0x10), GetPEFCapabilities)
	require.Equal(t, uint8(0x11), ArmPEFPostponeTimer)
	require.Equal(t, uint8(0x12), SetPEFConfigurationParameters)
	require.Equal(t, uint8(0x13), GetPEFConfigurationParameters)
	require.Equal(t, uint8(0x14), SetLastProcessingEventID)
	require.Equal(t, uint8(0x15), GetLastProcessingEventID)
	require.Equal(t, uint8(0x16), AlertImmediate)
	require.Equal(t, uint8(0x17), PETAcknowledge)

	require.Equal(t, uint8(0x20), GetDeviceSDRInfo)
	require.Equal(t, uint8(0x21), GetDeviceSDR)
	require.Equal(t, uint8(0x22), ReserveDeviceSDRRepository)
	require.Equal(t, uint8(0x23), GetSensorReadingFactors)
	require.Equal(t, uint8(0x24), SetSensorHysteresis)
	require.Equal(t, uint8(0x25), GetSensorHysteresis)
	require.Equal(t, uint8(0x26), SetSensorThreshold)
	require.Equal(t, uint8(0x27), GetSensorThreshold)
	require.Equal(t, uint8(0x28), SetSensorEventEnable)
	require.Equal(t, uint8(0x29), GetSensorEventEnable)
	require.Equal(t, uint8(0x2A), ReArmSensorEvents)
	require.Equal(t, uint8(0x2B), GetSensorEventStatus)
	require.Equal(t, uint8(0x2D), GetSensorReading)
	require.Equal(t, uint8(0x2E), SetSensorType)
	require.Equal(t, uint8(0x2F), GetSensorType)
	require.Equal(t, uint8(0x30), SetSensorReadingAndEventStatus)

	require.Equal(t, uint8(0x10), GetFRUInventoryAreaInfo)
	require.Equal(t, uint8(0x11), ReadFRUData)
	require.Equal(t, uint8(0x12), WriteFRUData)

	require.Equal(t, uint8(0x20), GetSDRRepositoryInfo)
	require.Equal(t, uint8(0x21), GetSDRRepositoryAllocationInfo)
	require.Equal(t, uint8(0x22), ReserveSDRRepository)
	require.Equal(t, uint8(0x23), GetSDR)
	require.Equal(t, uint8(0x24), AddSDR)
	require.Equal(t, uint8(0x25), PartialAddSDR)
	require.Equal(t, uint8(0x26), DeleteSDR)
	require.Equal(t, uint8(0x27), ClearSDRRepository)
	require.Equal(t, uint8(0x28), GetSDRRepositoryTime)
	require.Equal(t, uint8(0x29), SetSDRRepositoryTime)
	require.Equal(t, uint8(0x2A), EnterSDRRepositoryUpdateMode)
	require.Equal(t, uint8(0x2B), ExitSDRRepositoryUpdateMode)
	require.Equal(t, uint8(0x2C), RunInitializationAgent)

	require.Equal(t, uint8(0x40), GetSELInfo)
	require.Equal(t, uint8(0x41), GetSELAllocationInfo)
	require.Equal(t, uint8(0x42), ReserveSEL)
	require.Equal(t, uint8(0x43), GetSELEntry)
	require.Equal(t, uint8(0x44), AddSELEntry)
	require.Equal(t, uint8(0x45), PartialAddSELEntry)
	require.Equal(t, uint8(0x46), DeleteSELEntry)
	require.Equal(t, uint8(0x47), ClearSEL)
	require.Equal(t, uint8(0x48), GetSELTime)
	require.Equal(t, uint8(0x49), SetSELTime)
	require.Equal(t, uint8(0x5A), GetAuxiliaryLogStatus)
	require.Equal(t, uint8(0x5B), SetAuxiliaryLogStatus)
	require.Equal(t, uint8(0x5C), GetSELTimeUTCOffset)
	require.Equal(t, uint8(0x5D), SetSELTimeUTCOffset)

	require.Equal(t, uint8(0x01), SetLANConfigurationParameters)
	require.Equal(t, uint8(0x02), GetLANConfigurationParameters)
	require.Equal(t, uint8(0x03), SuspendBMCARPs)
	require.Equal(t, uint8(0x04), GetIPUDPRMCPStatistics)

	require.Equal(t, uint8(0x10), SetSerialModemConfiguration)
	require.Equal(t, uint8(0x11), GetSerialModemConfiguration)
	require.Equal(t, uint8(0x12), SetSerialModemMux)
	require.Equal(t, uint8(0x13), GetTAPResponseCodes)
	require.Equal(t, uint8(0x14), SetPPPUDPProxyTransmitData)
	require.Equal(t, uint8(0x15), GetPPPUDPProxyTransmitData)
	require.Equal(t, uint8(0x16), SetPPPUDPProxyPacket)
	require.Equal(t, uint8(0x17), GetPPPUDPProxyReceiveData)
	require.Equal(t, uint8(0x18), SerialModemConnectionActive)
	require.Equal(t, uint8(0x19), Callback)
	require.Equal(t, uint8(0x1A), SetUserCallbackOptions)
	require.Equal(t, uint8(0x1B), GetUserCallbackOptions)
	require.Equal(t, uint8(0x1C), SetSerialRoutingMux)
	require.Equal(t, uint8(0x20), SOLActivating)
	require.Equal(t, uint8(0x21), SetSOLConfigurationParameters)
	require.Equal(t, uint8(0x22), GetSOLConfigurationParameters)

	require.Equal(t, uint8(0x30), ForwardedCommand)
	require.Equal(t, uint8(0x31), SetForwardedCommands)
	require.Equal(t, uint8(0x32), GetForwardedCommands)
	require.Equal(t, uint8(0x33), EnableForwardedCommands)

	require.Equal(t, uint8(0x00), GetBridgeState)
	require.Equal(t, uint8(0x01), SetBridgeState)
	require.Equal(t, uint8(0x02), GetICMBAddress)
	require.Equal(t, uint8(0x03), SetICMBAddress)
	require.Equal(t, uint8(0x04), SetBridgeProxyAddress)
	require.Equal(t, uint8(0x05), GetBridgeStatistics)
	require.Equal(t, uint8(0x06), GetICMBCapabilities)
	require.Equal(t, uint8(0x08), ClearBridgeStatistics)
	require.Equal(t, uint8(0x09), GetBridgeProxyAddress)
	require.Equal(t, uint8(0x0A), GetICMBConnectorInfo)
	require.Equal(t, uint8(0x0B), GetICMBConnectionID)
	require.Equal(t, uint8(0x0C), SendICMBConnectionID)
	require.Equal(t, uint8(0xFF), ErrorReport)

	require.Equal(t, uint8(0x10), PrepareForDiscovery)
	require.Equal(t, uint8(0x11), GetAddresses)
	require.Equal(t, uint8(0x12), SetDiscovered)
	require.Equal(t, uint8(0x13), GetChassisDeviceID)
	require.Equal(t, uint8(0x14), SetChassisDeviceID)

	require.Equal(t, uint8(0x20), BridgeRequest)
	require.Equal(t, uint8(0x21), BridgeMessage)
}
